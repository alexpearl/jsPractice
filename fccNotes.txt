In JavaScript, String values are immutable, which means that they cannot be altered once created.

For example, the following code:

var myStr = "Bob";
myStr[0] = "J";
cannot change the value of myStr to "Job", because the contents of myStr cannot be altered. Note that this does not mean that myStr cannot be changed, just that the individual characters of a string literal cannot be changed. The only way to change myStr would be to assign it with a new string, like this:

var myStr = "Bob";
myStr = "Job";

var firstName = "Ada";
var secondLetterOfFirstName = firstName[1]; // secondLetterOfFirstName is "d"

In order to get the last letter of a string, you can subtract one from the string's length.
For example, if var firstName = "Charles", 
you can get the value of the last letter of the string by using firstName[firstName.length - 1].

You can also nest arrays within other arrays, like below:
[["Bulls", 23], ["White Sox", 45]]
This is also called a multi-dimensional array.

Unlike strings, the entries of arrays are mutable and can be changed freely.
var ourArray = [50,40,30];
ourArray[0] = 15; // equals [15,40,30]

One way to think of a multi-dimensional array, is as an array of arrays. 
When you use brackets to access your array, 
the first set of brackets refers to the entries in the outer-most (the first level) array, 
and each additional pair of brackets refers to the next level of entries inside.
var arr = [
  [1,2,3],
  [4,5,6],
  [7,8,9],
  [[10,11,12], 13, 14]
];
arr[3]; // equals [[10,11,12], 13, 14]
arr[3][0]; // equals [10,11,12]
arr[3][0][1]; // equals 11

An easy way to append data to the end of an array is via the push() function.
.push() takes one or more parameters and "pushes" them onto the end of the array.
var arr1 = [1,2,3];
arr1.push(4);
// arr1 is now [1,2,3,4]

.pop() is used to "pop" a value off of the end of an array. 
We can store this "popped off" value by assigning it to a variable. 
In other words, .pop() removes the last element from an array and returns that element.

.shift() removes the first element instead of the last like .pop()

unshift() adds the element at the beginning of the array

Parameters are variables that act as placeholders for the values that are to be input to a function when it is called. 
When a function is defined, it is typically defined along with one or more parameters. 
The actual values that are input (or "passed") into a function when it is called are known as arguments.
Here is a function with two parameters, param1 and param2:
function testFun(param1, param2) {
  console.log(param1, param2);
}

